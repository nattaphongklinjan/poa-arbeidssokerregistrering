name: Build and deploy

on:
  push:
    branches:
      - main
      - dev/*
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: "18.15.0"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - name: Install
        run: npm install --no-save --no-audit --prefer-offline --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Test
        run: npm run test:ci

  build:
    name: Build and Publish Docker image
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .npmrc to use in Docker build
        uses: actions/setup-node@v3
        with:
          registry-url: "https://npm.pkg.github.com"
          node-version: "18.15.0"

      - run: cp $NPM_CONFIG_USERCONFIG .npmrc

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: paw
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          secrets: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}
            SENTRY_LOG_LEVEL=info

      - name: Archive NAIS yaml
        uses: actions/upload-artifact@v3
        with:
          name: nais-yaml
          path: .nais
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-demo:
    name: Deploy to demo
    needs: [test, build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v3
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/nais-labs.yaml
          VARS: .nais/demo.yaml
          PRINT_PAYLOAD: true
          DEPLOY_SERVER: deploy.nais.io:443

  deploy-dev:
    name: Deploy to dev
    needs: [test, build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v3
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to prod
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v3
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/nais.yaml
          VARS: .nais/prod.yaml
          PRINT_PAYLOAD: true

      - name: Lag deployment i Sentry
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: poa-arbeidssokerregistrering
        with:
          environment: production
          version: ${{ github.sha }}
          set_commits: skip
